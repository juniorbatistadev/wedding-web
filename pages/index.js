import Head from "next/head";
import Image from "next/image";
import Product from "../src/components/Product";
import flowerImage from "../src/assets/images/flower.png";
import styles from "../styles/Home.module.css";
import { google } from "googleapis";
import { useState } from "react";
import Store from "../src/components/Store";

export default function Home({ data }) {
  const [currentPage, setCurrentPage] = useState("home");

  const handleChange = (page) => setCurrentPage(page);

  return (
    <div className={styles.container}>
      <Head>
        <title>Madeline &amp; Junior`&apos;`,s Registry</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles.header}>
        <img src={flowerImage.src} className={styles.imageLeft} />
        <h1 className={styles.title}>
          Madeline &amp; Junior`&apos;`,s Registry
        </h1>
        <img src={flowerImage.src} className={styles.imageRight} />
        <div className={styles.description}>
          <p>Thank you for checking out our registry! </p>
          <p>
            We have compiled a list of items that would be helpful as we start
            off our lives together. We have included links to show what type we
            are looking for, but does not need to be that specific item or
            brand! If you chose to purchase something from this list, please
            &quot;`check&quot;` the box.
          </p>
          <p>We hope this can be a useful resource to you! </p>
          <p>Thank you!</p>
        </div>
      </header>
      <main className={styles.main}>
        <ul className={styles.menu}>
          <li onClick={() => handleChange("home")}>Registry List</li>
          <li onClick={() => handleChange("stores")}>Stores We Like</li>
          <li>OTHERS</li>
        </ul>
        <div className={styles.content}>
          {currentPage === "home" && (
            <div className={styles.productsContainer}>
              {data.map((product, index) => (
                <Product data={product} key={index} />
              ))}
            </div>
          )}
          {currentPage === "stores" && (
            <>
              <p className={styles.textStores}>
                We have compiled a list of stores that you can use to find the
                items we listed in case the link were not enough or was looking
                for something different.
              </p>
              <div className={styles.storesContainer}>
                <Store
                  description="The Little Market ethically purchases products from dozens of artisan and producer groups in over 25 countries and sovereign states."
                  name="The Little Market"
                  link="https://www.thelittlemarket.com/pages/shop-by-cause"
                  coverImageSrc="https://images-na.ssl-images-amazon.com/images/I/31OIN3HtXFL._QL70_ML2_.jpg"
                />
                <Store
                  description="The best online store
                  for ethical and
                  sustainable goods."
                  name="Made Trade"
                  link="https://www.madetrade.com/"
                  coverImageSrc="https://thegreenhubonline.com/wp-content/uploads/2021/09/Made-Trade-logo.jpg"
                />
                <Store
                  description="Non-Toxic Cookware Made Modern."
                  name="Caraway"
                  link="https://www.carawayhome.com/"
                  coverImageSrc="https://idme-marketplace.s3.amazonaws.com/6yqo2qr6oxf8sgqxhtt9jaq6xd7h"
                />
                <Store
                  description="SUSTAINABLE HOME GOODS "
                  name="DoneGood"
                  link="https://donegood.co/collections/home"
                  coverImageSrc="https://i.ytimg.com/vi/PXW0u27aONA/maxresdefault.jpg"
                />
                <Store
                  description="Dr. Bronner’s is the top-selling soap in the U.S. natural marketplace.  "
                  name="DR. BRONNER'S"
                  link="https://shop.drbronner.com/"
                  coverImageSrc="https://directory.ifoam.bio/logos/preview/8211430_dr-bronner-s-magic-soaps.png?1506513507"
                />
                <Store
                  description="Young Living is the best company for product purity and effectiveness."
                  name="Young Living"
                  link="https://www.youngliving.com/us/en/"
                  coverImageSrc="https://p.kindpng.com/picc/s/12-124485_young-living-essential-oil-distillation-multi-level-young.png"
                />
                <Store
                  description="Trader Joe’s is a national chain of neighborhood grocery stores."
                  name="Trader Joe's"
                  link="https://www.traderjoes.com/home"
                  coverImageSrc="https://evergreenhealthfoundation.com/wp-content/uploads/2021/02/trader-joes-logo-vector.png"
                />
              </div>
            </>
          )}
        </div>
      </main>
      <footer className={styles.footer}>Blessings!</footer>
    </div>
  );
}

async function getAuthToken() {
  const { privateKey } = JSON.parse(
    process.env.GOOGLE_PRIVATE_KEY || "{ privateKey: null }"
  );

  const SCOPES = ["https://www.googleapis.com/auth/spreadsheets.readonly"];

  const auth = new google.auth.GoogleAuth({
    scopes: SCOPES,
    projectId: process.env.GOOGLE_PROJECTID,
    credentials: {
      private_key: privateKey,
      client_email: process.env.GOOGLE_CLIENT_EMAIL,
    },
  });

  console.log(auth);

  const authToken = await auth.getClient();
  return authToken;
}

export async function getServerSideProps() {
  const auth = await getAuthToken();

  const sheets = google.sheets({ version: "v4", auth });
  const range = `Sheet1!2:200`;

  const response = await sheets.spreadsheets.values.get({
    spreadsheetId: process.env.SHEET_ID,
    range,
  });

  const result = response.data.values.map((product, index) => {
    return {
      row: index + 2,
      name: product[0],
      description: product[1] ?? null,
      type: product[2] ?? null,
      amazonLink: product[3] ?? null,
      amazonLink2: product[4] ?? null,
      targetLink: product[5] ?? null,
      targetLink2: product[6] ?? null,
      otherLink: product[7] ?? null,
      otherLink2: product[8] ?? null,
      whoBought: product[9] ?? null,
      checked: product[10] ?? null,
      images: product[11] ?? null,
    };
  });

  return {
    props: {
      data: result,
    },
  };
}
